// Code by SeÃ¡n McConnon
// Comments generated by ChatGPT
// Import React and necessary hooks
import React, { useState } from "react";
// Import Firebase function for sending password reset emails
import { sendPasswordResetEmail } from "firebase/auth";
// Import your Firebase auth instance
import { auth } from "../firebase";

const ForgotPassword = () => {
  // State to manage the user's email input
  const [email, setEmail] = useState("");
  // State to display messages to the user, such as success or error messages
  const [message, setMessage] = useState("");

  // Function to handle the password reset process
  const handlePasswordReset = async (e) => {
    // Prevent the default form submission behavior
    e.preventDefault();

    try {
      // Call Firebase function to send a password reset email
      await sendPasswordResetEmail(auth, email);
      // Update the message state to notify the user of success
      setMessage("Password reset email sent! Please check your inbox.");
    } catch (error) {
      // Log the error to the console for debugging
      console.error("Error sending password reset email:", error.message);
      // Update the message state to notify the user of an error
      setMessage("Error sending password reset email. Please try again.");
    }
  };

  return (
    <div className="container d-flex justify-content-center align-items-center min-vh-100">
      {/* Card to contain the Forgot Password form */}
      <div
        className="card shadow p-4"
        style={{ maxWidth: "400px", width: "100%" }}
      >
        {/* Page title */}
        <h2 className="text-center mb-4">Forgot Password</h2>

        {/* Display message if one exists */}
        {message && <div className="alert alert-info">{message}</div>}

        {/* Form for email input and password reset */}
        <form onSubmit={handlePasswordReset}>
          {/* Email input field */}
          <div className="mb-3">
            <label htmlFor="email" className="form-label">
              Email Address
            </label>
            <input
              type="email" // Ensure the input is of email type for validation
              id="email" // Unique ID for accessibility
              className="form-control" // Bootstrap styling
              placeholder="Enter your email" // Placeholder text
              value={email} // Controlled component: bound to the email state
              onChange={(e) => setEmail(e.target.value)} // Update state on input change
              required // Ensure the field is not left empty
            />
          </div>

          {/* Submit button to trigger the password reset */}
          <button type="submit" className="btn btn-primary w-100">
            Send Reset Email
          </button>
        </form>

        {/* Link to navigate back to the login page */}
        <div className="text-center mt-3">
          <a href="/login" className="text-decoration-none">
            Back to Login
          </a>
        </div>
      </div>
    </div>
  );
};

export default ForgotPassword;
