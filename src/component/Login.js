// Code by Seán McConnon
//Code generated by ChatGPT
import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { auth } from "../firebase"; // Import Firebase Auth object
import { signInWithEmailAndPassword } from "firebase/auth"; // Firebase method for email/password login

const Login = () => {
  const navigate = useNavigate(); // Hook to navigate between routes
  const [loginData, setLoginData] = useState({ email: "", password: "" }); // State to hold form data (email and password)
  const [rememberMe, setRememberMe] = useState(false); // State to track "Remember Me" checkbox
  const [message, setMessage] = useState(""); // State to display error messages

  // Load remembered email from local storage when the component mounts
  useEffect(() => {
    const savedEmail = localStorage.getItem("rememberedEmail");
    if (savedEmail) {
      setLoginData((prev) => ({ ...prev, email: savedEmail })); // Pre-fill email if saved
      setRememberMe(true); // Set "Remember Me" checkbox to checked
    }
  }, []); // Runs only once on component mount

  // Update form data state when input changes
  const handleChange = (e) => {
    const { name, value } = e.target;
    setLoginData({ ...loginData, [name]: value }); // Update corresponding field in loginData
  };

  // Toggle the "Remember Me" checkbox state
  const handleRememberMeChange = () => {
    setRememberMe(!rememberMe);
  };

  // Handle form submission for login
  const handleLogin = async (e) => {
    e.preventDefault(); // Prevent page reload on form submission
    const { email, password } = loginData;

    try {
      // Authenticate user with email and password
      const userCredential = await signInWithEmailAndPassword(
        auth,
        email,
        password
      );
      const user = userCredential.user; // Successfully authenticated user

      // Save email to local storage if "Remember Me" is checked
      if (rememberMe) {
        localStorage.setItem("rememberedEmail", email);
      } else {
        localStorage.removeItem("rememberedEmail"); // Remove remembered email if not checked
      }

      // Navigate to the dashboard on successful login
      navigate("/dashboard");
    } catch (error) {
      console.error("Login error:", error.message); // Log error for debugging
      setMessage("Login failed. Please check your credentials."); // Display error message to user
    }
  };

  // Navigate to the registration page
  const goToRegister = () => navigate("/register");

  // Navigate to the "Forgot Password" page
  const goToForgotPassword = () => navigate("/forgot-password");

  // Render the login form
  return (
    <div className="container d-flex justify-content-center align-items-center min-vh-100">
      <div
        className="card shadow p-4"
        style={{ maxWidth: "400px", width: "100%" }}
      >
        <h2 className="text-center mb-4">Log in</h2>

        {/* Display error message if present */}
        {message && <div className="alert alert-danger">{message}</div>}

        <form onSubmit={handleLogin}>
          <div className="mb-3">
            <label htmlFor="email" className="form-label">
              Email Address
            </label>
            <input
              type="email"
              name="email"
              className="form-control"
              id="email"
              placeholder="Enter your email"
              value={loginData.email}
              onChange={handleChange}
              required
            />
          </div>
          <div className="mb-3">
            <label htmlFor="password" className="form-label">
              Password
            </label>
            <input
              type="password"
              name="password"
              className="form-control"
              id="password"
              placeholder="Enter your password"
              value={loginData.password}
              onChange={handleChange}
              required
            />
          </div>
          <div className="d-flex justify-content-between align-items-center">
            {/* "Remember Me" checkbox */}
            <div className="form-check">
              <input
                type="checkbox"
                className="form-check-input"
                id="rememberMe"
                checked={rememberMe}
                onChange={handleRememberMeChange}
              />
              <label className="form-check-label" htmlFor="rememberMe">
                Remember Me
              </label>
            </div>

            {/* Link to "Forgot Password" page */}
            <span
              onClick={goToForgotPassword}
              style={{ color: "blue", cursor: "pointer" }}
              className="small"
            >
              Forgot Password?
            </span>
          </div>

          {/* Submit button */}
          <button type="submit" className="btn btn-primary w-100 mt-3">
            Sign In
          </button>
        </form>

        {/* Link to registration page */}
        <div className="text-center mt-3">
          <p className="small">
            Don’t have an account?{" "}
            <span
              onClick={goToRegister}
              style={{ color: "blue", cursor: "pointer" }}
            >
              Register
            </span>
          </p>
        </div>
      </div>
    </div>
  );
};

export default Login;
